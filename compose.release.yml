name: reportportal
services:
  analyzer:
    build:
      context: ./service-auto-analyzer
      dockerfile: Dockerfile
    depends_on:
      opensearch:
        condition: service_started
        required: true
      rabbitmq:
        condition: service_healthy
        required: true
    environment:
      AMQP_EXCHANGE_NAME: analyzer-default
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      AMQP_VIRTUAL_HOST: analyzer
      ANALYZER_BINARYSTORE_TYPE: filesystem
      ES_HOSTS: http://opensearch:9200
      LOGGING_LEVEL: info
    image: reportportal/service-auto-analyzer:5.12.0-r1
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    volumes:
      - type: volume
        source: storage
        target: /data/storage
        volume: {}
  analyzer-train:
    build:
      context: ./service-auto-analyzer
      dockerfile: Dockerfile
    depends_on:
      opensearch:
        condition: service_started
        required: true
      rabbitmq:
        condition: service_healthy
        required: true
    environment:
      AMQP_EXCHANGE_NAME: analyzer-default
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      AMQP_VIRTUAL_HOST: analyzer
      ANALYZER_BINARYSTORE_TYPE: filesystem
      ES_HOSTS: http://opensearch:9200
      INSTANCE_TASK_TYPE: train
      LOGGING_LEVEL: info
      UWSGI_WORKERS: "1"
    image: reportportal/service-auto-analyzer:5.12.0-r1
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    volumes:
      - type: volume
        source: storage
        target: /data/storage
        volume: {}
  api:
    build:
      context: ./service-api
      dockerfile: Dockerfile
    depends_on:
      gateway:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      rabbitmq:
        condition: service_healthy
        required: true
    environment:
      AUDIT_LOGGER: "OFF"
      COM_TA_REPORTPORTAL_JOB_CLEAN_OUTDATED_PLUGINS_CRON: PT10S
      COM_TA_REPORTPORTAL_JOB_INTERRUPT_BROKEN_LAUNCHES_CRON: PT1H
      COM_TA_REPORTPORTAL_JOB_LOAD_PLUGINS_CRON: PT10S
      DATASTORE_TYPE: filesystem
      JAVA_OPTS: |
        -Xmx1g  -XX:+HeapDumpOnOutOfMemoryError  -XX:HeapDumpPath=/tmp   -Dcom.sun.management.jmxremote.rmi.port=12349  -Dcom.sun.management.jmxremote  -Dcom.sun.management.jmxremote.local.only=false   -Dcom.sun.management.jmxremote.port=9010  -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false  -Djava.rmi.server.hostname=0.0.0.0
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: info
      MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED: "false"
      REPORTING_CONSUMER_PREFETCHCOUNT: "10"
      REPORTING_PARKINGLOT_TTL_DAYS: "7"
      REPORTING_QUEUES_COUNT: "10"
      RP_AMQP_ANALYZER-VHOST: analyzer
      RP_AMQP_APIPASS: rabbitmq
      RP_AMQP_APIPORT: "15672"
      RP_AMQP_APIUSER: rabbitmq
      RP_AMQP_HOST: rabbitmq
      RP_AMQP_PASS: rabbitmq
      RP_AMQP_PORT: "5672"
      RP_AMQP_USER: rabbitmq
      RP_DB_HOST: postgres
      RP_DB_NAME: reportportal
      RP_DB_PASS: rppass
      RP_DB_PORT: "5432"
      RP_DB_USER: rpuser
      RP_ENVIRONMENT_VARIABLE_ALLOW_DELETE_ACCOUNT: "false"
      RP_ENVIRONMENT_VARIABLE_PATTERN-ANALYSIS_BATCH-SIZE: "100"
      RP_ENVIRONMENT_VARIABLE_PATTERN-ANALYSIS_CONSUMERS-COUNT: "1"
      RP_ENVIRONMENT_VARIABLE_PATTERN-ANALYSIS_PREFETCH-COUNT: "1"
      RP_JOBS_BASEURL: http://jobs:8686
      RP_REQUESTLOGGING: "false"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://0.0.0.0:8585/health
      timeout: 30s
      interval: 1m0s
      retries: 10
      start_period: 1m0s
    image: reportportal/service-api:5.12.0
    labels:
      traefik.expose: "true"
      traefik.http.middlewares.api-strip-prefix.stripprefix.prefixes: /api
      traefik.http.routers.api.middlewares: api-strip-prefix@docker
      traefik.http.routers.api.rule: PathPrefix(`/api`)
      traefik.http.routers.api.service: api
      traefik.http.services.api.loadbalancer.server.port: "8585"
      traefik.http.services.api.loadbalancer.server.scheme: http
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    volumes:
      - type: volume
        source: storage
        target: /data/storage
        volume: {}
  gateway:
    command:
      - --providers.docker=true
      - --providers.docker.constraints=Label(`traefik.expose`, `true`)
      - --entrypoints.web.address=:8080
      - --entrypoints.traefik.address=:8081
      - --api.dashboard=true
      - --api.insecure=true
    image: traefik:v2.11.2
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
  index:
    build:
      context: ./service-index
      dockerfile: Dockerfile
    depends_on:
      gateway:
        condition: service_started
        required: true
    environment:
      LB_URL: http://gateway:8081
      TRAEFIK_V2_MODE: "true"
    healthcheck:
      test:
        - CMD-SHELL
        - wget -q --spider http://0.0.0.0:8080/health
      timeout: 30s
      interval: 30s
      retries: 10
      start_period: 10s
    image: reportportal/service-index:5.12.0
    labels:
      traefik.expose: "true"
      traefik.http.routers.index.rule: PathPrefix(`/`)
      traefik.http.routers.index.service: index
      traefik.http.services.index.loadbalancer.server.port: "8080"
      traefik.http.services.index.loadbalancer.server.scheme: http
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
  jobs:
    build:
      context: ./service-jobs
      dockerfile: Dockerfile
    depends_on:
      gateway:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      rabbitmq:
        condition: service_healthy
        required: true
    environment:
      DATASTORE_TYPE: filesystem
      JAVA_OPTS: |
        -Djava.security.egd=file:/dev/./urandom -XX:+UseG1GC -XX:+UseStringDeduplication -XX:G1ReservePercent=20 -XX:InitiatingHeapOccupancyPercent=60 -XX:MaxRAMPercentage=70.0 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp
      RP_AMQP_ANALYZER-VHOST: analyzer
      RP_AMQP_APIPASS: rabbitmq
      RP_AMQP_APIPORT: "15672"
      RP_AMQP_APIUSER: rabbitmq
      RP_AMQP_HOST: rabbitmq
      RP_AMQP_MAXLOGCONSUMER: "1"
      RP_AMQP_PASS: rabbitmq
      RP_AMQP_PORT: "5672"
      RP_AMQP_USER: rabbitmq
      RP_DB_HOST: postgres
      RP_DB_NAME: reportportal
      RP_DB_PASS: rppass
      RP_DB_PORT: "5432"
      RP_DB_USER: rpuser
      RP_ENVIRONMENT_VARIABLE_CLEAN_ATTACHMENT_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_EVENTS_CRON: 0 30 05 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_EVENTS_RETENTIONPERIOD: "365"
      RP_ENVIRONMENT_VARIABLE_CLEAN_EXPIREDUSER_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_EXPIREDUSER_RETENTIONPERIOD: "365"
      RP_ENVIRONMENT_VARIABLE_CLEAN_LAUNCH_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_LOG_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CHUNKSIZE: "20000"
      RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_NOTIFICATION_EXPIREDUSER_CRON: 0 0 */24 * * *
      RP_ENVIRONMENT_VARIABLE_STORAGE_PROJECT_CRON: 0 */5 * * * *
      RP_PROCESSING_LOG_MAXBATCHSIZE: "2000"
      RP_PROCESSING_LOG_MAXBATCHTIMEOUT: "6000"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://0.0.0.0:8686/health || exit 1
      timeout: 30s
      interval: 1m0s
      retries: 10
      start_period: 1m0s
    image: reportportal/service-jobs:5.12.0
    labels:
      traefik.expose: "true"
      traefik.http.middlewares.jobs-strip-prefix.stripprefix.prefixes: /jobs
      traefik.http.routers.jobs.middlewares: jobs-strip-prefix@docker
      traefik.http.routers.jobs.rule: PathPrefix(`/jobs`)
      traefik.http.routers.jobs.service: jobs
      traefik.http.services.jobs.loadbalancer.server.port: "8686"
      traefik.http.services.jobs.loadbalancer.server.scheme: http
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    volumes:
      - type: volume
        source: storage
        target: /data/storage
        volume: {}
  metrics-gatherer:
    build:
      context: ./service-metrics-gatherer
      dockerfile: Dockerfile
    depends_on:
      opensearch:
        condition: service_started
        required: true
    environment:
      ALLOWED_END_TIME: "08:00"
      ALLOWED_START_TIME: "22:00"
      AMQP_EXCHANGE_NAME: analyzer-default
      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
      AMQP_VIRTUAL_HOST: analyzer
      ANALYZER_BINARYSTORE_TYPE: filesystem
      ES_HOST: http://opensearch:9200
      ES_HOSTS: http://opensearch:9200
      LOGGING_LEVEL: info
      POSTGRES_DB: reportportal
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: rppass
      POSTGRES_PORT: "5432"
      POSTGRES_USER: rpuser
    image: reportportal/service-metrics-gatherer:5.12.0-r1
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
  migrations:
    build:
      context: ./migrations
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    environment:
      POSTGRES_DB: reportportal
      POSTGRES_PASSWORD: rppass
      POSTGRES_PORT: "5432"
      POSTGRES_SERVER: postgres
      POSTGRES_USER: rpuser
    image: reportportal/migrations:5.12.1
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: on-failure
  opensearch:
    environment:
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      plugins.security.disabled: "true"
    healthcheck:
      test:
        - CMD
        - curl
        - -s
        - -f
        - http://0.0.0.0:9200/_cat/health
    image: opensearchproject/opensearch:2.16.0
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: volume
        source: opensearch
        target: /usr/share/opensearch/data
        volume: {}
  postgres:
    command:
      - -c
      - checkpoint_completion_target=0.9
      - -c
      - work_mem=96MB
      - -c
      - wal_writer_delay=20ms
      - -c
      - synchronous_commit=off
      - -c
      - wal_buffers=32MB
      - -c
      - min_wal_size=2GB
      - -c
      - max_wal_size=4GB
    environment:
      POSTGRES_DB: reportportal
      POSTGRES_PASSWORD: rppass
      POSTGRES_USER: rpuser
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 2m0s
      interval: 10s
      retries: 10
    image: postgres:12.17-alpine3.17
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    shm_size: "536870912"
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
        volume: {}
  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DISK_FREE_ABSOLUTE_LIMIT: 50MB
      RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: "true"
      RABBITMQ_PLUGINS: |
        rabbitmq_consistent_hash_exchange rabbitmq_management rabbitmq_auth_backend_ldap rabbitmq_shovel rabbitmq_shovel_management
    healthcheck:
      test:
        - CMD
        - rabbitmqctl
        - status
      timeout: 30s
      interval: 30s
      retries: 5
    image: bitnami/rabbitmq:3.13.7-debian-12-r2
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
  uat:
    build:
      context: ./service-authorization
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    environment:
      DATASTORE_TYPE: filesystem
      JAVA_OPTS: |
        -Djava.security.egd=file:/dev/./urandom -XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=90.0 --add-opens=java.base/java.lang=ALL-UNNAMED
      RP_AMQP_ANALYZER-VHOST: analyzer
      RP_AMQP_APIPASS: rabbitmq
      RP_AMQP_APIPORT: "15672"
      RP_AMQP_APIUSER: rabbitmq
      RP_AMQP_HOST: rabbitmq
      RP_AMQP_PASS: rabbitmq
      RP_AMQP_PORT: "5672"
      RP_AMQP_USER: rabbitmq
      RP_DB_HOST: postgres
      RP_DB_NAME: reportportal
      RP_DB_PASS: rppass
      RP_DB_PORT: "5432"
      RP_DB_USER: rpuser
      RP_INITIAL_ADMIN_PASSWORD: ""
      RP_SAML_SESSION-LIVE: "4320"
      RP_SESSION_LIVE: "86400"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://0.0.0.0:9999/health
      timeout: 30s
      interval: 1m0s
      retries: 10
      start_period: 1m0s
    image: reportportal/service-authorization:5.12.0
    labels:
      traefik.expose: "true"
      traefik.http.middlewares.uat-strip-prefix.stripprefix.prefixes: /uat
      traefik.http.routers.uat.middlewares: uat-strip-prefix@docker
      traefik.http.routers.uat.rule: PathPrefix(`/uat`)
      traefik.http.routers.uat.service: uat
      traefik.http.services.uat.loadbalancer.server.port: "9999"
      traefik.http.services.uat.loadbalancer.server.scheme: http
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 100m
    networks:
      reportportal: null
    restart: always
    volumes:
      - type: volume
        source: storage
        target: /data/storage
        volume: {}
  ui:
    build:
      context: ./service-ui
      dockerfile: Dockerfile
    environment:
      RP_SERVER_PORT: "8080"
    healthcheck:
      test:
        - CMD-SHELL
        - wget -q --spider http://0.0.0.0:8080/health
      timeout: 30s
      interval: 30s
      retries: 10
      start_period: 10s
    image: reportportal/service-ui:5.12.0
    labels:
      traefik.expose: "true"
      traefik.http.middlewares.ui-strip-prefix.stripprefix.prefixes: /ui
      traefik.http.routers.ui.middlewares: ui-strip-prefix@docker
      traefik.http.routers.ui.rule: PathPrefix(`/ui`)
      traefik.http.routers.ui.service: ui
      traefik.http.services.ui.loadbalancer.server.port: "8080"
      traefik.http.services.ui.loadbalancer.server.scheme: http
    networks:
      reportportal: null
    restart: always
networks:
  reportportal:
    name: reportportal_reportportal
volumes:
  opensearch:
    name: reportportal_opensearch
  postgres:
    name: reportportal_postgres
  storage:
    name: reportportal_storage
x-amqp:
  rabbitmq_apiport: 15672
  rabbitmq_host: rabbitmq
  rabbitmq_password: rabbitmq
  rabbitmq_port: 5672
  rabbitmq_user: rabbitmq
x-analyzer-environment:
  AMQP_EXCHANGE_NAME: analyzer-default
  AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672
  AMQP_VIRTUAL_HOST: analyzer
  ANALYZER_BINARYSTORE_TYPE: filesystem
  ES_HOSTS: http://opensearch:9200
  LOGGING_LEVEL: info
x-database:
  db_host: postgres
  db_name: reportportal
  db_password: rppass
  db_port: 5432
  db_user: rpuser
x-environment:
  DATASTORE_TYPE: filesystem
  RP_AMQP_ANALYZER-VHOST: analyzer
  RP_AMQP_APIPASS: rabbitmq
  RP_AMQP_APIPORT: 15672
  RP_AMQP_APIUSER: rabbitmq
  RP_AMQP_HOST: rabbitmq
  RP_AMQP_PASS: rabbitmq
  RP_AMQP_PORT: 5672
  RP_AMQP_USER: rabbitmq
  RP_DB_HOST: postgres
  RP_DB_NAME: reportportal
  RP_DB_PASS: rppass
  RP_DB_PORT: 5432
  RP_DB_USER: rpuser
x-logging:
  driver: json-file
  options:
    max-file: "5"
    max-size: 100m
